%% Import data from text file.
% Script for importing data from the following text file:
%
%    /Users/mrperry/LIGO/Data/Original/NEIC_QC_2015_2016.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/10/21 12:11:28

%% Initialize variables.
filename = '/Users/mrperry/LIGO/Data/Original/NEIC_QC_2015_2016.csv';
delimiter = ',';
startRow = 2;

%% Format string for each line of text:
%   column1: text (%q)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: text (%q)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: text (%q)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: text (%q)
%   column23: double (%f)
%	column24: text (%q)
%   column25: text (%q)
%	column26: text (%q)
%   column27: text (%q)
%	column28: double (%f)
%   column29: text (%q)
%	column30: text (%q)
%   column31: text (%q)
%	column32: text (%q)
%   column33: text (%q)
%	column34: text (%q)
%   column35: text (%q)
%	column36: double (%f)
%   column37: double (%f)
%	column38: double (%f)
%   column39: double (%f)
%	column40: double (%f)
%   column41: double (%f)
%	column42: text (%q)
%   column43: double (%f)
%	column44: double (%f)
%   column45: double (%f)
%	column46: double (%f)
%   column47: double (%f)
%	column48: double (%f)
%   column49: double (%f)
%	column50: double (%f)
%   column51: double (%f)
%	column52: double (%f)
%   column53: text (%q)
%	column54: text (%q)
%   column55: text (%q)
%	column56: text (%q)
%   column57: text (%q)
%	column58: double (%f)
%   column59: double (%f)
%	column60: double (%f)
%   column61: double (%f)
%	column62: double (%f)
%   column63: text (%q)
%	column64: text (%q)
%   column65: double (%f)
%	column66: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%q%f%f%f%f%f%f%q%f%f%f%f%f%f%f%q%f%f%f%f%f%q%f%q%q%q%q%f%q%q%q%q%q%q%q%f%f%f%f%f%f%q%f%f%f%f%f%f%f%f%f%f%q%q%q%q%q%f%f%f%f%f%q%q%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
EVENTCODE = dataArray{:, 1};
TDETECTLATENCY = dataArray{:, 2};
TORIGINPDE = dataArray{:, 3};
MAGPDE = dataArray{:, 4};
DLATPDE = dataArray{:, 5};
DLONPDE = dataArray{:, 6};
DDEPTHPDE = dataArray{:, 7};
IUSEDPHFINAL = dataArray{:, 8};
TORIGININITIAL = dataArray{:, 9};
MAGINITIAL = dataArray{:, 10};
DLATINITIAL = dataArray{:, 11};
DLONINITIAL = dataArray{:, 12};
DDEPTHINITIAL = dataArray{:, 13};
DERRMAXHKM = dataArray{:, 14};
DERRMAXZKM = dataArray{:, 15};
SCHEDULED_ANALYST = dataArray{:, 16};
ANALYST1STCLAIM = dataArray{:, 17};
T1STCLAIMED = dataArray{:, 18};
ANALYSTLASTCLAIM = dataArray{:, 19};
TLASTUNCLAIM = dataArray{:, 20};
ANALYSTFIRSTPUB = dataArray{:, 21};
QUICK = dataArray{:, 22};
TFIRSTPUB = dataArray{:, 23};
ANALYST2NDPUB = dataArray{:, 24};
Q2UIC = dataArray{:, 25};
TSECONDPUB = dataArray{:, 26};
SINSTFIR = dataArray{:, 27};
TFIRSTEXTP = dataArray{:, 28};
TFIRSTATWC = dataArray{:, 29};
TFIRSTPTWC = dataArray{:, 30};
TFIRSTATWCINT = dataArray{:, 31};
TFIRSTPTWCINT = dataArray{:, 32};
INSHA = dataArray{:, 33};
TBECAMERESP = dataArray{:, 34};
EVENT_DATE_TIME = dataArray{:, 35};
PREFMAGCURRENT = dataArray{:, 36};
DLATCURRENT = dataArray{:, 37};
DLONCURRENT = dataArray{:, 38};
DDEPTHCURRENT = dataArray{:, 39};
TORIGINCURRENT = dataArray{:, 40};
IUSEDPHCURRENT = dataArray{:, 41};
TFIRSTGLASS = dataArray{:, 42};
TORIGINFIRST = dataArray{:, 43};
MAGFIRST = dataArray{:, 44};
DLATFIRST = dataArray{:, 45};
DLONFIRST = dataArray{:, 46};
DDEPTHFIRST = dataArray{:, 47};
TORIGINAUTO = dataArray{:, 48};
MAGAUTO = dataArray{:, 49};
DLATAUTO = dataArray{:, 50};
DLONAUTO = dataArray{:, 51};
DDEPTHAUTO = dataArray{:, 52};
TORIGIN10 = dataArray{:, 53};
MAG10 = dataArray{:, 54};
DLAT10 = dataArray{:, 55};
DLON10 = dataArray{:, 56};
DDEPTH10 = dataArray{:, 57};
iPDENum = dataArray{:, 58};
Felt = dataArray{:, 59};
iQCEventDataQuality = dataArray{:, 60};
iQCTimeShift = dataArray{:, 61};
iQCFullPelletCount = dataArray{:, 62};
SINSTFIN = dataArray{:, 63};
SINSTDET = dataArray{:, 64};
tDetect = dataArray{:, 65};
dRespMagThresh = dataArray{:, 66};


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%%
MagBin = 0.1;
MinMag = 4.5;
ind = find(MAGPDE >= 4.5);
Data = [MAGPDE(ind), MAGFIRST(ind)];
MaxMag = max(Data(:,1));
MagVec = MinMag:MagBin:MaxMag;
MedianMagDiff = zeros(length(MagVec),1);
MeanMagDiff = zeros(length(MagVec),1);
%%
for ii = 1 : length(MagVec);
    MagSubset = Data(Data(:,1) >= MagVec(ii) & Data(:,1) < MagVec(ii)+MagBin,:);
    if ~isempty(MagSubset)
        MedianMagDiff(ii,1) = median(MagSubset(:,1)-MagSubset(:,2));
        MeanMagDiff(ii,1) = mean(MagSubset(:,1) - MagSubset(:,2));
    else
        MedianMagDiff(ii,1) = NaN;
        MeanMagDiff(ii,1) = NaN;
    end
end 
%%
figure;clf
bar(MagVec,MedianMagDiff)
xlabel('Magnitude')
ylabel('Median Difference between Final and Initial Magnitude')
title('Median Difference between Final and Initial Magnitude')
xlim([4.5 8.4])




    
  